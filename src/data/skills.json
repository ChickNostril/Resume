{
  "title": "Skills",
  "categories": [
    {
      "category": "Front-end",
      "skills": [
        {
          "name": "React",
          "details": [
            "React Router를 사용하여 단일 페이지 애플리케이션에서 라우팅을 구현할 수 있습니다.",
            "React Hooks를 사용하여 함수형 컴포넌트 상태를 관리할 수 있습니다.",
            "Zustand와 같은 상태 관리 도구를 사용하여 전역 상태를 효율적으로 관리하고, 복잡한 상태 변화를 효과적으로 처리할 수 있습니다."
          ]
        },
        {
          "name": "Javascript",
          "details": [
            "비동기 처리를 위해 Promise와 async/await을 사용할 수 있습니다.",
            "모듈화를 통해 함수 간의 결합도를 낮추고 재사용성을 높일 수 있습니다.",
            "상황에 따라 적절한 이벤트 리스너를 선택하여 사용할 수 있습니다."
          ]
        },
        {
          "name": "Typescript",
          "details": [
            "정적 타입을 사용하여 코드의 안정성과 가독성을 향상시킬 수 있습니다.",
            "인터페이스와 제네릭으로 타입 검사를 할 수 있습니다."
          ]
        },
        {
          "name": "Three.js & @react-three/fiber (R3F)",
          "details": [
            "Three.js를 통해 WebGL 기반의 3D 그래픽과 애니메이션 개발 경험이 있습니다.",
            "@react-three/fiber를 사용하여 React 환경에서 Three.js의 기능을 더 간결하게 활용할 수 있습니다.",
            "3D 모델을 로드하고, 실시간 상호작용 및 사용자 정의 애니메이션을 추가할 수 있습니다."
          ]
        },
        {
          "name": "HTML",
          "details": [
            "웹 페이지의 구조를 설계하고 효율적으로 구성할 수 있습니다."
          ]
        },
        {
          "name": "CSS",
          "details": [
            "다양한 레이아웃 기법을 사용하여 반응형 웹 디자인을 구현할 수 있습니다.",
            "모듈화된 스타일시트를 작성하여 유지보수성을 높일 수 있습니다."
          ]
        }
      ]
    },
    {
      "category": "Back-end",
      "skills": [
        {
          "name": "express",
          "details": [
            "CRUD 기능을 포함한 RESTful API를 설계하고 구현할 수 있습니다.",
            "Entity-Relationship Diagram을 통해 효율적인 데이터베이스 구조를 설계할 수 있습니다.",
            "Express.js를 사용하여 웹 서버를 설정하고 REST API를 설계할 수 있습니다.",
            "Cookie 및 Session을 사용해 사용자 인증 및 권한을 관리할 수 있습니다."
          ]
        },
        {
          "name": "FastAPI",
          "details": [
            "Python 기반의 FastAPI를 사용하여 고성능 RESTful API를 설계하고 구현할 수 있습니다.",
            "비동기 처리(Async/Await)를 통해 빠르고 확장 가능한 서버를 구축할 수 있습니다.",
            "자동화된 API 문서를 활용하여 개발 및 테스트를 간소화할 수 있습니다."
          ]
        }
      ]
    },
    {
      "category": "협업 도구",
      "skills": [
        {
          "name": "Git",
          "details": [
            "코드 버전 관리를 통해 팀원들과의 협업을 효율적으로 진행할 수 있습니다.",
            "브랜치 전략을 활용해 협업 시 충돌을 최소화할 수 있습니다.",
            "GitHub을 통해 코드 리뷰 및 피드백을 받고, 협업을 원활하게 진행할 수 있습니다.",
            "GitHub Enterprise를 사용해 사내 전용 GitHub 페이지를 통해 코드 관리를 수행하고, 보안이 강화된 환경에서 협업한 경험이 있습니다."
          ]
        },
        {
          "name": "Notion",
          "details": [
            "팀 커뮤니케이션을 효율적으로 관리하고, 실시간으로 협업할 수 있는 환경을 제공할 수 있습니다."
          ]
        }
      ]
    }
  ]
}
